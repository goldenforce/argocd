### Configure Custom Roles
function configureCustomRoles()
{
	## Initialize
	configureCustomRolesStatus="Failed"
	configurePlatformStateSetTaskStatus="Failed"
	failedCount=0
		
	now=`date -u '+%Y%m%d_%H%M'`
	configureCustomRolesStartTime=$(date +%s)
	echoLog "INFO" "Job - $(hostname) - Image - Repository - ${application_image}" "Custom Roles" "True" | tee -a ${configureCustomRolesLogFile}
	echoLog "INFO" "All - Configurations - Begin" "Custom Roles" | tee -a ${configureCustomRolesLogFile}

	roles="${edm_maker_roles},${edm_checker_roles}"
	checkerRole="${edm_checker_roles}"

	### Update Roles
	for role in $(echo $roles | sed "s/,/ /g")
	do
		### SRLE updates
		sqlCommand="insert into FT_T_SRLE (srle_oid,appl_id, start_tms, last_chg_tms, last_chg_usr_id, sec_role_nme)"
		sqlCommand+=" select new_oid(), 'SSTATION', now(), now(), 'CUSTOM', '${role}'"
		sqlCommand+=" where not exists (select 1 from FT_T_SRLE where sec_role_nme='${role}');"
		dbQueryExecute "SRLE-update-${role}" "${sqlCommand}" "${configureCustomRolesWorkFolder}/work"
		if [ "${dbQueryExecuteStatus}" == "Failed" ]; then
			((failedCount += 1))
			echoLog "ERROR" "SRLE_update - ${role} - Failed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
		else
			echoLog "INFO" "SRLE_update - ${role} - Completed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
		fi

		### AUGR updates
		sqlCommand="insert into FT_T_AUGR(usr_grp_oid, usr_grp_id, start_tms, grp_nme, last_chg_tms, last_chg_usr_id)"
		sqlCommand+=" select new_oid(),'${role^^}_GROUP',now(),'${role^^}_GROUP',now(), 'CUSTOM'"
		sqlCommand+=" where not exists(select 1 from FT_T_AUGR where usr_grp_id='${role^^}_GROUP');"
		dbQueryExecute "AUGR-update-${role}" "${sqlCommand}" "${configureCustomRolesWorkFolder}/work"
		if [ "${dbQueryExecuteStatus}" == "Failed" ]; then
			((failedCount += 1))
			echoLog "ERROR" "AUGR_update - ${role} - Failed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
		else
			echoLog "INFO" "AUGR_update - ${role} - Completed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
		fi
	done

	### UTSK updates
	sqlCommand="update FT_WF_UTSK set last_chg_usr_id ='CUSTOM' where usr_task_id ='GPCS_ASSIGNMENT';"
	dbQueryExecute "UTSK-GPCS-update" "${sqlCommand}" "${configureCustomRolesWorkFolder}/work"
	if [ "${dbQueryExecuteStatus}" == "Failed" ]; then
		((failedCount += 1))
		echoLog "ERROR" "UTSK_GPCS - update - Failed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	else
		echoLog "INFO" "UTSK_GPCS - update - Completed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	fi
	
    sqlCommand="update FT_WF_UTSK set last_chg_usr_id ='CUSTOM' where usr_task_id ='PRICE_ASSIGNMENT';"
	dbQueryExecute "UTSK-PRICE-update" "${sqlCommand}" "${configureCustomRolesWorkFolder}/work"
	if [ "${dbQueryExecuteStatus}" == "Failed" ]; then
		((failedCount += 1))
		echoLog "ERROR" "UTSK_PRICE - update - Failed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	else
		echoLog "INFO" "UTSK_PRICE - update - Completed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	fi

    sqlCommand="update FT_WF_UTSK set last_chg_usr_id ='CUSTOM', asgn_usr_grp_oid = "
    sqlCommand+=" (select usr_grp_oid from FT_T_AUGR where usr_grp_id='${makerCheckerRole^^}_GROUP')" 
    sqlCommand+=" where usr_task_id ='GPCS_DEFAULT';"
	dbQueryExecute "UTSK-GPCS-DEFAULT-update" "${sqlCommand}" "${configureCustomRolesWorkFolder}/work"
	if [ "${dbQueryExecuteStatus}" == "Failed" ]; then
		((failedCount += 1))
		echoLog "ERROR" "UTSK_GPCS_DEFAULT - update - Failed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	else
		echoLog "INFO" "UTSK_GPCS_DEFAULT - update - Completed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	fi

	sqlCommand="update FT_WF_UTSK set last_chg_usr_id ='CUSTOM', asgn_usr_grp_oid = "
	sqlCommand+=" (select usr_grp_oid from FT_T_AUGR where usr_grp_id='${makerCheckerRole^^}_GROUP')" 
	sqlCommand+=" where usr_task_id ='GPCS_VALID_DEFAULT';"
	dbQueryExecute "UTSK-VALID-DEFAULT-update" "${sqlCommand}" "${configureCustomRolesWorkFolder}/work"
	if [ "${dbQueryExecuteStatus}" == "Failed" ]; then
		((failedCount += 1))
		echoLog "ERROR" "UTSK_VALID_DEFAULT - update - Failed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	else
		echoLog "INFO" "UTSK_VALID_DEFAULT - update - Completed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	fi

	sqlCommand="update FT_WF_UTSK set last_chg_usr_id ='CUSTOM', asgn_usr_grp_oid = "
	sqlCommand+=" (select usr_grp_oid from FT_T_AUGR where usr_grp_id='${makerCheckerRole^^}_GROUP')" 
	sqlCommand+="  where usr_task_id ='PRICE_ASSIGNMENT_DEFAULT';"
	dbQueryExecute "UTSK-PRICE-ASSIGNMENT-DEFAULT-update" "${sqlCommand}" "${configureCustomRolesWorkFolder}/work"
	if [ "${dbQueryExecuteStatus}" == "Failed" ]; then
		((failedCount += 1))
		echoLog "ERROR" "UTSK_ASSG_DEFAULT - update - Failed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	else
		echoLog "INFO" "UTSK_ASSG_DEFAULT - update - Completed" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	fi

	## Final
	computeElapsedTime ${configureCustomRolesStartTime}
	if [[ ${failedCount} -eq 0 ]]; then
		configureCustomRolesStatus="Completed"
	fi
	
	if [ "$configureCustomRolesStatus" == "Failed" ]; then
		echoLog "ERROR" "All - Configurations - Failed - ${elapsedTimeTaken}" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	else
		echoLog "INFO" "All - Configurations - Completed - ${elapsedTimeTaken}" "Custom Roles" | tee -a ${configureCustomRolesLogFile}
	fi

	### Process Platform State
	configurePlatformStateSetTask "configureCustomRoles" "${edm_version}" "${configureCustomRolesStatus}"
}
