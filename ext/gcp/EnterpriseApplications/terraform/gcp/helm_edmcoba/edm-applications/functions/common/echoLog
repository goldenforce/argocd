### Function for generating logs using echo
function echoLog()
{
	logType="$1"
	logMessage="$2"
	logFunctionProvided="$3"
	logIgnoreSeperator="$4"
	logFunction="shell command"
	if [ -z "${log_mode}" ]; then
		log_mode="INFO DEBUG ERROR"
	fi
	if [ ! -z "${FUNCNAME[1]}" ]; then
		logFunction="${FUNCNAME[1]}"
	fi
	if [ ! -z "${logFunctionProvided}" ]; then
		logFunction="${logFunctionProvided}"
	fi
	if [ -z "${logIgnoreSeperator}" ]; then
		logIgnoreSeperator="False"
	fi
	if [ "${logIgnoreSeperator}" == "False" ]; then
		__echoSplitMessage "${logMessage}"
	fi
	if [ "${logIgnoreSeperator}" == "True" ]; then
		__echoSplitMessageSingle "${logMessage}"
	fi
	if [[ "$log_mode" == *"$logType"* ]]; then
		printf '%s %-5s %-30s %s\n' "$(date '+%Y-%m-%d:%H:%M:%S')" "${logType}" "${logFunction}" "${logMessage}" 
	fi    
}

### Function echo - split string
function __echoSplitMessage()
{
	## If string contains '-'
	if [[ ! $logMessage == *"-"* ]]; then
  		return
	fi
	logMessage="$1"
	msg1Seperator="-"
	msg2Seperator="-"
	msg3Seperator="-"

	msg1=$(echo "$logMessage" | cut -d "-" -f1)
	msg2=$(echo "$logMessage" | cut -d "-" -f2)
	msg3=$(echo "$logMessage" | cut -d "-" -f3)
	msg4=$(echo "$logMessage" | cut -d "-" -f4)
	
	if [ -z "${msg4}" ]; then
		msg3Seperator=""
	fi
	if [ -z "${msg3}" ]; then
		msg2Seperator=""
	fi
	if [ -z "${msg2}" ]; then
		msg1Seperator=""
	fi
	if [ -z "${msg1}" ]; then
		msg1=${logMessage}
	fi
	logMessageOut=`printf "%-25s ${msg1Seperator} %-25s ${msg2Seperator} %-25s ${msg3Seperator} %-30s" "$msg1" "$msg2" "$msg3" "$msg4"`
	logMessage="${logMessageOut}"
}

### Function echo - split string
function __echoSplitMessageSingle()
{
	## If string contains '-'
	if [[ ! $logMessage == *"-"* ]]; then
  		return
	fi
	logMessage="$1"
	msg1Seperator="-"

	msg1=$(echo "$logMessage" | cut -d "-" -f1)
	msg2=$(echo "$logMessage" | cut -d "-" -f2-)
	
	logMessageOut=`printf "%-25s ${msg1Seperator} %-60s" "$msg1" "$msg2"`
	logMessage="${logMessageOut}"
}
