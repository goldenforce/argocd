### Basic, Annotations
{{- $basic := include "basic" . | fromYaml }}
{{- $annotationsLabels := include "annotationsLabels" . | fromYaml }}
{{- $annotationsLabelsService := include "annotationsLabelsService" . | fromYaml }}
{{- $annotationsLabelsIngressDatabase := include "annotationsLabelsIngressDatabase" . | fromYaml }}
### Ingresses
{{- $ingresses := include "ingresses" . | fromYaml }}
###
{{- range $k, $v := $ingresses.ingresses -}}
{{ if (eq $v.type "Database") }}
{{ if $.Values.ingresses.ingress.database.create }}
{{ if $v.tcpConfigMap.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $v.tcpConfigMap.name }}
  {{- with $annotationsLabelsIngressDatabase.database}}
  {{ toYaml . | nindent 2 }}
  {{- end }}
data:
  {{ $v.port }}: "{{ $.Release.Namespace }}/database:{{ $v.port }}"  
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: database
  annotations:
    {{- with $annotationsLabelsService.service.annotations }}
    {{ toYaml . | nindent 4 }}
    {{- end }}

    ### Openshift
    {{- if eq $.Values.common.cloud "openshift" }}
    {{- if eq $.Values.ingresses.ingress.ui.ingressClassName "openshift-default" }}
    service.beta.openshift.io/serving-cert-secret-name: {{ printf "edm-openshift-%s" "database" }}
    {{- end }}
    {{- end }}
  labels:
    cluster: {{ lower $k }}
    app: {{ lower $k }}
    {{- with $annotationsLabels.common.labels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  ports:
  - name: https
    port: {{ $v.port }}
    protocol: TCP
    targetPort: {{ $v.port }}
  sessionAffinity: ClientIP
  type: ClusterIP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: database
  annotations:
    {{- with $annotationsLabelsService.service.annotations }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  labels:
    cluster: {{ lower $k }}
    app: {{ lower $k }}
    {{- with $annotationsLabels.common.labels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
subsets:
  - addresses:
      - ip: {{ $.Values.database.ip }}
    ports:
      - name: https
        port: {{ $v.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $v.name }}
  annotations:
    # Include database annotations
    {{- with $v.annotations }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- with $annotationsLabelsIngressDatabase.database.labels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $ingresses.ingresses.database.spec}}
  {{ toYaml . | nindent 2 }}
  {{- end }}
  {{- if $basic.basic.cloud.ingressTls }}
  tls:
  - hosts:
    - {{ $v.host }}
    secretName: {{ $v.secret.name }}
  {{- end }}  
  defaultBackend:
    service:
      name: {{ $k }}
      port:
        number: {{ $v.port }}
  {{- if $basic.basic.cloud.ingressTlsHost }}        
  rules:
  - http:
    host: {{ $v.host }}
  {{- end }}    
---
{{- end }}
{{- end }}
{{- end }}
