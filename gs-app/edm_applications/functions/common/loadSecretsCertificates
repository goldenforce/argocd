### Load Secrets/Certificates
function loadSecretsCertificates()
{
	## Load secrets/custom secrets
	if [ ! -z "${edm_applications_secret_scripts}" ]; then
		export $( cat ${edm_applications_secret_scripts} | xargs )
	fi
	if [ ! -z "${edm_applications_secret_custom_scripts}" ]; then
		export $( cat ${edm_applications_secret_custom_scripts} | xargs )
	fi
	
	## Copy Protected
	mkdir -p /ext/app
	cd /ext/app
	cp -R /etc/edm/secret/protected/ .
	find /ext/app/protected/Certificates/ -name "*.key" -exec chmod 600 {} \;

	### SSL
	SSL_Mode="${DatabaseSSL}"
	SSL_Server_RootCert="sslrootcert=${protected_home}/Certificates/db/ODBC/${Certificate_databaseServer_odbcRoot}"
	SSL_Server_Cert="sslcert=${protected_home}/Certificates/db/ODBC/${Certificate_databaseServer_odbcCertificate}"
	SSL_Server_Key="sslkey=${protected_home}/Certificates/db/ODBC/${Certificate_databaseServer_odbcKey}"

	SSL_databaseServer="${protected_home}/Certificates/db/JDBC/${Certificate_databaseServer}"
	SSL_databaseClient="${protected_home}/Certificates/db/JDBC/${Certificate_databaseClient}"
	SSL_databaseKey="${protected_home}/Certificates/db/JDBC/${Certificate_databaseKey}"

	SSL_Url=""
	SSL_Argument=""
	SSL_Argument_JDBC=""
	SSL_Argument_Inst_CLI="false"
	if [ "${DatabaseSSL}" == "require" ]; then
		SSL_Url="?ssl=true&sslmode=require&sslcert=${SSL_databaseClient}&sslkey=${SSL_databaseKey}&sslrootcert=${SSL_databaseServer}"
		SSL_Argument="sslmode=require ${SSL_Server_RootCert} ${SSL_Server_Cert} ${SSL_Server_Key}"
		SSL_Argument_JDBC="&ssl=true&sslmode=require&sslcert=${SSL_databaseClient}&sslkey=${SSL_databaseKey}&sslrootcert=${SSL_databaseServer}"
		SSL_Argument_Inst_CLI="true"
	fi
	export SSL_Argument_JDBC=${SSL_Argument_JDBC}
}
